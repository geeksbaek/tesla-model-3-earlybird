{"version":3,"sources":["assets/img/compare-model3--center.png","Price/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Price","state","trims","options","color","interior","wheal","autopilot","saletex","개별소비세","과세","감면","교육세","취득세","subsidy_list","loadingA","loadingB","performance_index","base_selected","base_price","color_selected","color_price","wheal_selected","wheal_price","interior_selected","interior_price","autopilot_price","total_price","gov_subsidy","local_subsidy","final_price","usdTokrw","usd","toFixed","comma","x","Number","toString","replace","calcTotalPrice","_this","setState","prev","부가가치세_과세","개별소비세_과세","개별소비세_감면","Math","min","교육세_과세","교육세_감면","취득세_과세","취득세_감면","전기차_보조금","최종가격","max","_this2","this","axios","get","then","res","data","YAML","parse","forEach","v","i","gov","local","_this3","react_default","a","createElement","Segment","textAlign","className","loading","Message","info","List","Header","Divider","hidden","fitted","Item","Table","compact","celled","selectable","Row","HeaderCell","Body","map","key","active","Cell","collapsing","Checkbox","radio","checked","onClick","onChange","basic","Grid","columns","relaxed","Column","Form","Group","e","value","style","width","sub","Dropdown","fluid","deburr","text","concat","name","subsidy","placeholder","selection","search","_ref","Card","Content","Icon","Description","extra","Button","primary","as","href","target","vertical","Component","panes","menuItem","icon","content","render","Price_Price","App","Container","centered","verticalAlign","Tab","menu","secondary","pointing","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0c29779.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compare-model3--center.2d32f04f.png\";","import React, { Component } from \"react\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Checkbox,\r\n  Button,\r\n  Divider,\r\n  Message,\r\n  Card,\r\n  Header,\r\n  List,\r\n  Dropdown,\r\n  Table\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport YAML from \"yamljs\";\r\n\r\nimport \"./index.css\";\r\n\r\nexport default class Price extends Component {\r\n  state = {\r\n    trims: [],\r\n    options: { color: [], interior: [], wheal: [], autopilot: [] },\r\n    saletex: {\r\n      개별소비세: { 과세: 0, 감면: 0 },\r\n      교육세: { 과세: 0, 감면: 0 },\r\n      취득세: { 과세: 0, 감면: 0 }\r\n    },\r\n    subsidy_list: [],\r\n    loadingA: true,\r\n    loadingB: true,\r\n    performance_index: -1,\r\n\r\n    base_selected: 0,\r\n    base_price: 0,\r\n    color_selected: 0,\r\n    color_price: 0,\r\n    wheal_selected: 0,\r\n    wheal_price: 0,\r\n    interior_selected: 0,\r\n    interior_price: 0,\r\n    autopilot_price: 0,\r\n    total_price: 0,\r\n    gov_subsidy: 0,\r\n    local_subsidy: 0,\r\n    final_price: 0\r\n  };\r\n\r\n  usdTokrw = usd => (usd * 1134.72).toFixed(0);\r\n  comma = x =>\r\n    Number(x)\r\n      .toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  calcTotalPrice = () =>\r\n    this.setState(prev => {\r\n      return {\r\n        total_price:\r\n          Number(prev.base_price) +\r\n          Number(prev.color_price) +\r\n          Number(prev.wheal_price) +\r\n          Number(prev.interior_price) +\r\n          Number(prev.autopilot_price)\r\n      };\r\n    });\r\n  부가가치세_과세 = () => this.state.total_price * 0.1;\r\n  개별소비세_과세 = () =>\r\n    this.state.total_price * this.state.saletex.개별소비세.과세;\r\n  개별소비세_감면 = () =>\r\n    Math.min(this.개별소비세_과세(), this.state.saletex.개별소비세.감면);\r\n  교육세_과세 = () => this.개별소비세_과세() * this.state.saletex.교육세.과세;\r\n  교육세_감면 = () =>\r\n    Math.min(this.교육세_과세(), this.state.saletex.교육세.감면);\r\n  취득세_과세 = () =>\r\n    (this.state.total_price +\r\n      (this.개별소비세_과세() - this.개별소비세_감면()) +\r\n      (this.교육세_과세() - this.교육세_감면())) *\r\n    this.state.saletex.취득세.과세;\r\n  취득세_감면 = () =>\r\n    Math.min(this.취득세_과세(), this.state.saletex.취득세.감면);\r\n  전기차_보조금 = () => this.state.gov_subsidy + this.state.local_subsidy;\r\n  최종가격 = () =>\r\n    Math.max(\r\n      this.state.total_price +\r\n        this.부가가치세_과세() +\r\n        this.개별소비세_과세() -\r\n        this.개별소비세_감면() +\r\n        this.교육세_과세() -\r\n        this.교육세_감면() +\r\n        this.취득세_과세() -\r\n        this.취득세_감면() -\r\n        this.전기차_보조금(),\r\n      0\r\n    );\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/model_3.yaml\"\r\n      )\r\n      .then(res => {\r\n        let data = YAML.parse(res.data);\r\n        this.setState({\r\n          trims: data.trims,\r\n          options: data.options,\r\n          base_price: this.usdTokrw(data.trims[0][\"가격\"]),\r\n          base_selected: 0,\r\n          loadingA: false\r\n        });\r\n        data.trims.forEach((v, i) => {\r\n          if (v[\"이름\"] === \"Performance\") {\r\n            this.setState({ performance_index: i });\r\n          }\r\n        });\r\n        this.calcTotalPrice();\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/saletex.yaml\"\r\n      )\r\n      .then(res => {\r\n        let data = YAML.parse(res.data);\r\n        this.setState({\r\n          saletex: {\r\n            개별소비세: {\r\n              과세: data[\"개별소비세\"][\"과세\"],\r\n              감면: data[\"개별소비세\"][\"감면\"]\r\n            },\r\n            교육세: {\r\n              과세: data[\"교육세\"][\"과세\"],\r\n              감면: data[\"교육세\"][\"감면\"]\r\n            },\r\n            취득세: {\r\n              과세: data[\"취득세\"][\"과세\"],\r\n              감면: data[\"취득세\"][\"감면\"]\r\n            }\r\n          },\r\n          loadingB: false\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/subsidy.json\"\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          gov_subsidy: res.data.gov,\r\n          subsidy_list: res.data.local\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Segment\r\n        textAlign=\"left\"\r\n        className=\"SegmentGroup\"\r\n        loading={this.state.loadingA && this.state.loadingB}\r\n      >\r\n        <Message info>\r\n          <Message.List>\r\n            <Message.Header>먼저 읽어주세요</Message.Header>\r\n            <Divider hidden fitted />\r\n            <Divider hidden fitted />\r\n            <Divider hidden fitted />\r\n            <Divider hidden fitted />\r\n            <Message.Item>\r\n              여기에서 표기되는 모든 가격은 USD를 현재 시간 기준의 환율을\r\n              적용하여 KRW으로 나타낸 것입니다.\r\n            </Message.Item>\r\n            <Message.Item>\r\n              구입에 필요한 최소한의 옵션이 미리 선택되어 있습니다.\r\n            </Message.Item>\r\n            <Message.Item>\r\n              거주지를 선택하면 해당 지자체에서 지급하는 승용 전기차 보조금과\r\n              정부에서 지급하는 전기차 보조금이 최종 가격에 반영됩니다.\r\n            </Message.Item>\r\n            <Message.Item>\r\n              계산된 가격과 실제 가격은 차이가 발생할 수 있으며 이로 인해\r\n              발생하는 문제에 대한 책임은 사용자에게 있습니다.\r\n            </Message.Item>\r\n          </Message.List>\r\n        </Message>\r\n\r\n        <Table compact=\"very\" celled selectable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>모델명</Table.HeaderCell>\r\n              <Table.HeaderCell>가격</Table.HeaderCell>\r\n              <Table.HeaderCell>주행거리</Table.HeaderCell>\r\n              <Table.HeaderCell>0-60mph</Table.HeaderCell>\r\n              <Table.HeaderCell>구동방식</Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.trims.map((v, i) => (\r\n              <Table.Row key={i} active={this.state.base_selected === i}>\r\n                <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                <Table.Cell>\r\n                  {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                </Table.Cell>\r\n                <Table.Cell>{v[\"주행거리(km)\"] + \" km\"}</Table.Cell>\r\n                <Table.Cell>{v[\"0-60\"] + \" 초\"}</Table.Cell>\r\n                <Table.Cell>{v[\"구동방식\"]}</Table.Cell>\r\n                <Table.Cell collapsing>\r\n                  <Checkbox\r\n                    radio\r\n                    checked={this.state.base_selected === i}\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        base_price: this.usdTokrw(v[\"가격\"]),\r\n                        base_selected: i\r\n                      });\r\n                      if (v[\"이름\"] === \"Performance\") {\r\n                        this.setState({\r\n                          wheal_price: 0,\r\n                          wheal_selected: 2\r\n                        });\r\n                      } else {\r\n                        this.setState({\r\n                          wheal_price: 0,\r\n                          wheal_selected: 0\r\n                        });\r\n                      }\r\n                    }}\r\n                    onChange={this.calcTotalPrice}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        <Segment basic>\r\n          <Grid columns={2} relaxed=\"very\">\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>색상</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"color\"].map((v, i) => (\r\n                        <Table.Row\r\n                          key={i}\r\n                          active={this.state.color_selected === i}\r\n                        >\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              radio\r\n                              checked={this.state.color_selected === i}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  color_price: this.usdTokrw(v[\"가격\"]),\r\n                                  color_selected: i\r\n                                });\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>휠</Table.HeaderCell>\r\n                        <Table.HeaderCell>사이즈</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"wheal\"].map((v, i) => (\r\n                        <Table.Row\r\n                          key={i}\r\n                          active={this.state.wheal_selected === i}\r\n                          hidden={\r\n                            (this.state.base_selected !==\r\n                              this.state.performance_index &&\r\n                              v[\"_only\"] === \"Performance\") ||\r\n                            (this.state.base_selected ===\r\n                              this.state.performance_index &&\r\n                              v[\"_only\"] === \"!Performance\")\r\n                          }\r\n                        >\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>{v[\"사이즈\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              radio\r\n                              checked={this.state.wheal_selected === i}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  wheal_price: this.usdTokrw(v[\"가격\"]),\r\n                                  wheal_selected: i\r\n                                });\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>인테리어</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"interior\"].map((v, i) => (\r\n                        <Table.Row\r\n                          key={i}\r\n                          active={this.state.interior_selected === i}\r\n                        >\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              radio\r\n                              checked={this.state.interior_selected === i}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  interior_price: this.usdTokrw(v[\"가격\"]),\r\n                                  interior_selected: i\r\n                                });\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>오토파일럿</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"autopilot\"].map((v, i) => (\r\n                        <Table.Row key={i}>\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              onClick={(e, value) => {\r\n                                if (value.checked) {\r\n                                  this.setState({\r\n                                    autopilot_price: this.usdTokrw(v[\"가격\"])\r\n                                  });\r\n                                } else {\r\n                                  this.setState({\r\n                                    autopilot_price: 0\r\n                                  });\r\n                                }\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n                <Divider hidden />\r\n                <Form.Group>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <Header sub>전기차 보조금</Header>\r\n                    <Dropdown\r\n                      fluid\r\n                      deburr\r\n                      options={this.state.subsidy_list.map((v, i) => {\r\n                        return {\r\n                          key: i,\r\n                          value: i,\r\n                          text: `${v.name} (${this.comma(v.subsidy)}원)`\r\n                        };\r\n                      })}\r\n                      placeholder=\"보조금 계산을 위해 거주지를 선택하세요\"\r\n                      selection\r\n                      search\r\n                      onChange={(e, { value }) => {\r\n                        this.setState({\r\n                          local_subsidy: this.state.subsidy_list[value].subsidy\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Card fluid>\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">\r\n                    Model 3 가격 예상\r\n                  </Card.Header>\r\n                </Card.Content>\r\n                <Card.Content>\r\n                  <List>\r\n                    <List.Item>\r\n                      <List.Icon name=\"car\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"grey\" }}>\r\n                          {this.comma(this.state.total_price) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>차량 공장도 가격</List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <Divider />\r\n                    <List.Item>\r\n                      <List.Icon name=\"plus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"orange\" }}>\r\n                          {this.comma(this.부가가치세_과세()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          부가가치세 (취득 당시 가액의 10%)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"plus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"orange\" }}>\r\n                          {this.comma(this.개별소비세_과세()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          개별소비세 (공장도 가격의 5%)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"minus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"green\" }}>\r\n                          {this.comma(this.개별소비세_감면()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          개별소비세 감면 (최대 300만원 감면)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"plus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"orange\" }}>\r\n                          {this.comma(this.교육세_과세()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          교육세 (개별소비세의 30%)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"minus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"green\" }}>\r\n                          {this.comma(this.교육세_감면()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          교육세 감면 (최대 90만원 감면)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"plus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"orange\" }}>\r\n                          {this.comma(this.취득세_과세()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          취득세 (공장도 가격+개별소비세+교육세의 7%)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"minus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"green\" }}>\r\n                          {this.comma(this.취득세_감면()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>\r\n                          취득세 감면 (최대 140만원 감면)\r\n                        </List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <Divider />\r\n                    <List.Item>\r\n                      <List.Icon name=\"minus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"green\" }}>\r\n                          {this.comma(this.state.gov_subsidy) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>정부 보조금</List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                      <List.Icon name=\"minus\" />\r\n                      <List.Content>\r\n                        <List.Header style={{ color: \"green\" }}>\r\n                          {this.comma(this.state.local_subsidy) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>지방자치단체 보조금</List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                    <Divider />\r\n                    <List.Item>\r\n                      <List.Icon name=\"calculator\" />\r\n                      <List.Content>\r\n                        <List.Header>\r\n                          {this.comma(this.최종가격()) + \" 원\"}\r\n                        </List.Header>\r\n                        <List.Description>최종 가격</List.Description>\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  </List>\r\n                </Card.Content>\r\n                <Card.Content extra textAlign=\"right\">\r\n                  <Button\r\n                    primary\r\n                    as=\"a\"\r\n                    href=\"https://www.tesla.com/ko_KR/model3/reserve\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    사전 예약\r\n                  </Button>\r\n                </Card.Content>\r\n              </Card>\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Divider vertical>Calc</Divider>\r\n        </Segment>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Container, Grid, Segment, Tab, Image } from \"semantic-ui-react\";\nimport \"./index.css\";\nimport Logo from \"./assets/img/compare-model3--center.png\";\nimport Price from \"./Price\";\n\nconst panes = [\n  {\n    menuItem: { key: \"price\", icon: \"calculator\", content: \"가격 계산\" },\n    render: () => <Price />\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <Container className=\"container\">\n        <Grid centered verticalAlign=\"middle\">\n          {/* <Grid.Row>\n            <Segment basic>\n              <Image src={Logo} size=\"big\" centered />\n            </Segment>\n          </Grid.Row> */}\n          <Grid.Row verticalAlign=\"middle\">\n            <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}