{"version":3,"sources":["assets/img/compare-model3--center.png","Price/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Price","state","trims","options","color","interior","wheal","autopilot","saletex","개별소비세","과세","감면","교육세","취득세","base_selected","base_price","color_selected","color_price","wheal_selected","wheal_price","interior_selected","interior_price","autopilot_price","total_price","ev_sale_price","final_price","usdTokrw","usd","toFixed","comma","x","Number","toString","replace","calcTotalPrice","_this","setState","prev","개별소비세_과세","개별소비세_감면","Math","min","교육세_과세","교육세_감면","취득세_과세","취득세_감면","전기차_보조금","최종가격","_this2","this","axios","get","then","res","data","YAML","parse","console","log","_this3","react_default","a","createElement","Segment","textAlign","className","Form","Message","info","List","Header","Divider","hidden","fitted","Item","Group","Table","compact","celled","Row","HeaderCell","Body","map","v","i","key","Cell","collapsing","Checkbox","radio","checked","onClick","onChange","e","value","Input","type","labelPosition","placeholder","_ref","Label","Icon","name","Content","Description","label","Button","style","display","marginLeft","primary","Component","panes","menuItem","icon","content","render","Price_Price","App","Container","Grid","centered","verticalAlign","Tab","menu","secondary","pointing","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee8a8e02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compare-model3--center.2d32f04f.png\";","import React, { Component } from \"react\";\r\nimport {\r\n  Segment,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Form,\r\n  Checkbox,\r\n  Divider,\r\n  Message,\r\n  Header,\r\n  Dropdown,\r\n  List,\r\n  Label,\r\n  Table\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport YAML from \"yamljs\";\r\n\r\nimport \"./index.css\";\r\n\r\nexport default class Price extends Component {\r\n  state = {\r\n    trims: [],\r\n    options: { color: [], interior: [], wheal: [], autopilot: [] },\r\n    saletex: {\r\n      개별소비세: { 과세: 0, 감면: 0 },\r\n      교육세: { 과세: 0, 감면: 0 },\r\n      취득세: { 과세: 0, 감면: 0 }\r\n    },\r\n\r\n    base_selected: 0,\r\n    base_price: 0,\r\n    color_selected: 0,\r\n    color_price: 0,\r\n    wheal_selected: 0,\r\n    wheal_price: 0,\r\n    interior_selected: 0,\r\n    interior_price: 0,\r\n    autopilot_price: 0,\r\n    total_price: 0,\r\n    ev_sale_price: 1400,\r\n    final_price: 0\r\n  };\r\n\r\n  usdTokrw = usd => (usd * 1134.72).toFixed(0);\r\n  comma = x =>\r\n    Number(x)\r\n      .toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  calcTotalPrice = () =>\r\n    this.setState(prev => {\r\n      return {\r\n        total_price:\r\n          Number(prev.base_price) +\r\n          Number(prev.color_price) +\r\n          Number(prev.wheal_price) +\r\n          Number(prev.interior_price) +\r\n          Number(prev.autopilot_price)\r\n      };\r\n    });\r\n  개별소비세_과세 = () =>\r\n    this.state.total_price * this.state.saletex.개별소비세.과세;\r\n  개별소비세_감면 = () =>\r\n    Math.min(this.개별소비세_과세(), this.state.saletex.개별소비세.감면);\r\n  교육세_과세 = () => this.개별소비세_과세() * this.state.saletex.교육세.과세;\r\n  교육세_감면 = () =>\r\n    Math.min(this.교육세_과세(), this.state.saletex.교육세.감면);\r\n  취득세_과세 = () =>\r\n    (this.state.total_price + this.개별소비세_과세() + this.교육세_과세()) *\r\n    this.state.saletex.취득세.과세;\r\n  취득세_감면 = () =>\r\n    Math.min(this.취득세_과세(), this.state.saletex.취득세.감면);\r\n  전기차_보조금 = () => this.state.ev_sale_price * 10000;\r\n  최종가격 = () =>\r\n    this.state.total_price +\r\n    this.state.total_price * 0.1 +\r\n    this.개별소비세_과세() -\r\n    this.개별소비세_감면() +\r\n    this.교육세_과세() -\r\n    this.교육세_감면() +\r\n    this.취득세_과세() -\r\n    this.취득세_감면() -\r\n    this.전기차_보조금();\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/model_3.yaml\"\r\n      )\r\n      .then(res => {\r\n        let data = YAML.parse(res.data);\r\n        this.setState({\r\n          trims: data.trims,\r\n          options: data.options,\r\n          base_price: this.usdTokrw(data.trims[0][\"가격\"]),\r\n          base_selected: 0\r\n        });\r\n        this.calcTotalPrice();\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/saletex.yaml\"\r\n      )\r\n      .then(res => {\r\n        let data = YAML.parse(res.data);\r\n        console.log(data);\r\n        this.setState({\r\n          saletex: {\r\n            개별소비세: {\r\n              과세: data[\"개별소비세\"][\"과세\"],\r\n              감면: data[\"개별소비세\"][\"감면\"]\r\n            },\r\n            교육세: {\r\n              과세: data[\"교육세\"][\"과세\"],\r\n              감면: data[\"교육세\"][\"감면\"]\r\n            },\r\n            취득세: {\r\n              과세: data[\"취득세\"][\"과세\"],\r\n              감면: data[\"취득세\"][\"감면\"]\r\n            }\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Segment textAlign=\"left\" className=\"SegmentGroup\">\r\n        <Form>\r\n          <Message info>\r\n            <Message.List>\r\n              <Message.Header>먼저 읽어주세요</Message.Header>\r\n              <Divider hidden fitted />\r\n              <Divider hidden fitted />\r\n              <Divider hidden fitted />\r\n              <Divider hidden fitted />\r\n              <Message.Item>\r\n                여기에서 표기되는 모든 가격은 USD를 현재 시간 기준의 환율을\r\n                적용하여 KRW으로 나타낸 것입니다.\r\n              </Message.Item>\r\n              <Message.Item>\r\n                구입에 필요한 최소한의 옵션이 미리 선택되어 있습니다.\r\n              </Message.Item>\r\n              <Message.Item>\r\n                보조금 항목은 정부 및 해당 지자체의 전기차 보조금을 합산하여\r\n                입력하셔야 합니다.\r\n              </Message.Item>\r\n              <Message.Item>\r\n                계산된 가격과 실제 가격은 차이가 발생할 수 있는 것을 감안하시기\r\n                바랍니다.\r\n              </Message.Item>\r\n            </Message.List>\r\n          </Message>\r\n\r\n          <Form.Group>\r\n            <Table compact celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>모델명</Table.HeaderCell>\r\n                  <Table.HeaderCell>가격</Table.HeaderCell>\r\n                  <Table.HeaderCell>주행거리</Table.HeaderCell>\r\n                  <Table.HeaderCell>0-60 마일/h</Table.HeaderCell>\r\n                  <Table.HeaderCell>구동방식</Table.HeaderCell>\r\n                  <Table.HeaderCell />\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                {this.state.trims.map((v, i) => (\r\n                  <Table.Row key={i}>\r\n                    <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{v[\"주행거리(km)\"] + \" km\"}</Table.Cell>\r\n                    <Table.Cell>{v[\"0-60\"] + \" 초\"}</Table.Cell>\r\n                    <Table.Cell>{v[\"구동방식\"]}</Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                      <Checkbox\r\n                        radio\r\n                        checked={this.state.base_selected === i}\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            base_price: this.usdTokrw(v[\"가격\"]),\r\n                            base_selected: i\r\n                          });\r\n                          if (v[\"이름\"] === \"Performance\") {\r\n                            this.setState({\r\n                              wheal_price: 0,\r\n                              wheal_selected: 2\r\n                            });\r\n                          } else {\r\n                            this.setState({\r\n                              wheal_price: 0,\r\n                              wheal_selected: 0\r\n                            });\r\n                          }\r\n                        }}\r\n                        onChange={this.calcTotalPrice}\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Table compact celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>색상</Table.HeaderCell>\r\n                  <Table.HeaderCell>가격</Table.HeaderCell>\r\n                  <Table.HeaderCell />\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                {this.state.options[\"color\"].map((v, i) => (\r\n                  <Table.Row key={i}>\r\n                    <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                      <Checkbox\r\n                        radio\r\n                        checked={this.state.color_selected === i}\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            color_price: this.usdTokrw(v[\"가격\"]),\r\n                            color_selected: i\r\n                          });\r\n                        }}\r\n                        onChange={this.calcTotalPrice}\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Table compact celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>휠</Table.HeaderCell>\r\n                  <Table.HeaderCell>사이즈</Table.HeaderCell>\r\n                  <Table.HeaderCell>가격</Table.HeaderCell>\r\n                  <Table.HeaderCell />\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                {this.state.options[\"wheal\"].map((v, i) => (\r\n                  <Table.Row key={i}>\r\n                    <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                    <Table.Cell>{v[\"사이즈\"]}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                      <Checkbox\r\n                        radio\r\n                        checked={this.state.wheal_selected === i}\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            wheal_price: this.usdTokrw(v[\"가격\"]),\r\n                            wheal_selected: i\r\n                          });\r\n                        }}\r\n                        onChange={this.calcTotalPrice}\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Table compact celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>인테리어</Table.HeaderCell>\r\n                  <Table.HeaderCell>가격</Table.HeaderCell>\r\n                  <Table.HeaderCell />\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                {this.state.options[\"interior\"].map((v, i) => (\r\n                  <Table.Row key={i}>\r\n                    <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                      <Checkbox\r\n                        radio\r\n                        checked={this.state.interior_selected === i}\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            interior_price: this.usdTokrw(v[\"가격\"]),\r\n                            interior_selected: i\r\n                          });\r\n                        }}\r\n                        onChange={this.calcTotalPrice}\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Table compact celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>오토파일럿</Table.HeaderCell>\r\n                  <Table.HeaderCell>가격</Table.HeaderCell>\r\n                  <Table.HeaderCell />\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>\r\n                {this.state.options[\"autopilot\"].map((v, i) => (\r\n                  <Table.Row key={i}>\r\n                    <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                    </Table.Cell>\r\n                    <Table.Cell collapsing>\r\n                      <Checkbox\r\n                        onClick={(e, value) => {\r\n                          if (value.checked) {\r\n                            this.setState({\r\n                              autopilot_price: this.usdTokrw(v[\"가격\"])\r\n                            });\r\n                          } else {\r\n                            this.setState({\r\n                              autopilot_price: 0\r\n                            });\r\n                          }\r\n                        }}\r\n                        onChange={this.calcTotalPrice}\r\n                      />\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </Form.Group>\r\n\r\n          <Input\r\n            type=\"number\"\r\n            labelPosition=\"right\"\r\n            placeholder=\"전기차 보조금\"\r\n            value={this.state.ev_sale_price}\r\n            onChange={(e, { value }) =>\r\n              this.setState({ ev_sale_price: Number(value) })\r\n            }\r\n          >\r\n            <input />\r\n            <Label>만원</Label>\r\n          </Input>\r\n\r\n          <Form.Group>\r\n            <List>\r\n              <List.Item>\r\n                <List.Icon name=\"car\" />\r\n                <List.Content>\r\n                  <List.Header>\r\n                    {this.comma(this.state.total_price)}\r\n                  </List.Header>\r\n                  <List.Description>차량 가격</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"plus\" />\r\n                <List.Content>\r\n                  <List.Header>\r\n                    {this.comma(this.state.total_price * 0.1)}\r\n                  </List.Header>\r\n                  <List.Description>부가가치세 10%</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"plus\" />\r\n                <List.Content>\r\n                  <List.Header>\r\n                    {this.comma(this.개별소비세_과세())}\r\n                  </List.Header>\r\n                  <List.Description>개별소비세</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"minus\" />\r\n                <List.Content>\r\n                  <List.Header>\r\n                    {this.comma(this.개별소비세_감면())}\r\n                  </List.Header>\r\n                  <List.Description>개별소비세 감면</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"plus\" />\r\n                <List.Content>\r\n                  <List.Header>{this.comma(this.교육세_과세())}</List.Header>\r\n                  <List.Description>교육세</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"minus\" />\r\n                <List.Content>\r\n                  <List.Header>{this.comma(this.교육세_감면())}</List.Header>\r\n                  <List.Description>교육세 감면</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"plus\" />\r\n                <List.Content>\r\n                  <List.Header>{this.comma(this.취득세_과세())}</List.Header>\r\n                  <List.Description>취득세</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"minus\" />\r\n                <List.Content>\r\n                  <List.Header>{this.comma(this.취득세_감면())}</List.Header>\r\n                  <List.Description>취득세 감면</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"minus\" />\r\n                <List.Content>\r\n                  <List.Header>{this.comma(this.전기차_보조금())}</List.Header>\r\n                  <List.Description>전기차 보조금</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n              <List.Item>\r\n                <List.Icon name=\"won sign\" />\r\n                <List.Content>\r\n                  <List.Header>{this.comma(this.최종가격())}</List.Header>\r\n                  <List.Description>최종 금액</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            </List>\r\n          </Form.Group>\r\n\r\n          <Divider />\r\n\r\n          <Checkbox label=\"세금 계산\" />\r\n\r\n          <Divider />\r\n\r\n          <Button style={{ display: \"inherit\", marginLeft: \"auto\" }} primary>\r\n            <Icon name=\"calculator\" /> 계산\r\n          </Button>\r\n        </Form>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Container, Grid, Segment, Tab, Image } from \"semantic-ui-react\";\nimport \"./index.css\";\nimport Logo from \"./assets/img/compare-model3--center.png\";\nimport Price from \"./Price\";\n\nconst panes = [\n  {\n    menuItem: { key: \"price\", icon: \"won sign\", content: \"가격 비교\" },\n    render: () => <Price />\n  }\n];\n\nclass App extends Component {\n  render() {\n    return (\n      <Container className=\"container\">\n        <Grid centered verticalAlign=\"middle\">\n          {/* <Grid.Row>\n            <Segment basic>\n              <Image src={Logo} size=\"big\" centered />\n            </Segment>\n          </Grid.Row> */}\n          <Grid.Row verticalAlign=\"middle\">\n            <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}