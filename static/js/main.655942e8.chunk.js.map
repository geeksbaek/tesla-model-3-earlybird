{"version":3,"sources":["assets/img/compare-model3--center.png","Price/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Price","state","trims","options","color","interior","wheal","autopilot","saletex","개별소비세","과세","감면","교육세","취득세","subsidy_list","loadingA","loadingB","performance_index","base_selected","base_price","color_selected","color_price","wheal_selected","wheal_price","interior_selected","interior_price","autopilot_price","total_price","gov_subsidy","local_subsidy","final_price","prepay","annual_loan_interest_rate","installment_months","usdTokrw","usd","toFixed","comma","x","Number","toString","replace","calcTotalPrice","_this","setState","prev","부가가치세_과세","개별소비세_과세","개별소비세_감면","Math","min","교육세_과세","교육세_감면","취득세_과세","취득세_감면","전기차_보조금","할부원금","max","최종가격","원리금균등상환_월납입금","대출원금","연이자율","할부개월","월이자율","pow","_this2","this","axios","get","then","res","data","YAML","parse","forEach","v","i","gov","local","_this3","react_default","a","createElement","Segment","textAlign","className","loading","Message","info","List","Header","Divider","hidden","fitted","Item","Table","compact","celled","selectable","Row","HeaderCell","Body","map","key","active","Cell","collapsing","Checkbox","radio","checked","onClick","onChange","basic","Grid","columns","relaxed","Column","Form","Group","e","value","style","width","sub","Dropdown","fluid","deburr","text","concat","name","subsidy","placeholder","selection","search","_ref","Tab","menu","secondary","pointing","panes","menuItem","render","Card","Content","Icon","Description","Popup","trigger","content","size","extra","Button","primary","as","href","target","widths","Field","readOnly","control","Input","label","_ref2","match","type","error","_ref3","_ref4","vertical","Component","icon","Price_Price","App","Container","centered","verticalAlign","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.655942e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compare-model3--center.2d32f04f.png\";","import React, { Component } from \"react\";\r\nimport {\r\n  Segment,\r\n  Grid,\r\n  Form,\r\n  Checkbox,\r\n  Button,\r\n  Divider,\r\n  Message,\r\n  Card,\r\n  Header,\r\n  List,\r\n  Tab,\r\n  Input,\r\n  Popup,\r\n  Icon,\r\n  Dropdown,\r\n  Table\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport YAML from \"yamljs\";\r\n\r\nimport \"./index.css\";\r\n\r\nexport default class Price extends Component {\r\n  state = {\r\n    trims: [],\r\n    options: { color: [], interior: [], wheal: [], autopilot: [] },\r\n    saletex: {\r\n      개별소비세: { 과세: 0, 감면: 0 },\r\n      교육세: { 과세: 0, 감면: 0 },\r\n      취득세: { 과세: 0, 감면: 0 }\r\n    },\r\n    subsidy_list: [],\r\n    loadingA: true,\r\n    loadingB: true,\r\n    performance_index: -1,\r\n\r\n    base_selected: 0,\r\n    base_price: 0,\r\n    color_selected: 0,\r\n    color_price: 0,\r\n    wheal_selected: 0,\r\n    wheal_price: 0,\r\n    interior_selected: 0,\r\n    interior_price: 0,\r\n    autopilot_price: 0,\r\n    total_price: 0,\r\n    gov_subsidy: 0,\r\n    local_subsidy: 0,\r\n    final_price: 0,\r\n    prepay: 0,\r\n    annual_loan_interest_rate: 3.5,\r\n    installment_months: 60\r\n  };\r\n\r\n  usdTokrw = usd => (usd * 1134.72).toFixed(0);\r\n  comma = x =>\r\n    Number(x)\r\n      .toFixed(0)\r\n      .toString()\r\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  calcTotalPrice = () =>\r\n    this.setState(prev => {\r\n      return {\r\n        total_price:\r\n          Number(prev.base_price) +\r\n          Number(prev.color_price) +\r\n          Number(prev.wheal_price) +\r\n          Number(prev.interior_price) +\r\n          Number(prev.autopilot_price)\r\n      };\r\n    });\r\n  부가가치세_과세 = () => this.state.total_price * 0.1;\r\n  개별소비세_과세 = () =>\r\n    this.state.total_price * this.state.saletex.개별소비세.과세;\r\n  개별소비세_감면 = () =>\r\n    Math.min(this.개별소비세_과세(), this.state.saletex.개별소비세.감면);\r\n  교육세_과세 = () => this.개별소비세_과세() * this.state.saletex.교육세.과세;\r\n  교육세_감면 = () =>\r\n    Math.min(this.교육세_과세(), this.state.saletex.교육세.감면);\r\n  취득세_과세 = () =>\r\n    (this.state.total_price +\r\n      (this.개별소비세_과세() - this.개별소비세_감면()) +\r\n      (this.교육세_과세() - this.교육세_감면())) *\r\n    this.state.saletex.취득세.과세;\r\n  취득세_감면 = () =>\r\n    Math.min(this.취득세_과세(), this.state.saletex.취득세.감면);\r\n  전기차_보조금 = () => this.state.gov_subsidy + this.state.local_subsidy;\r\n  할부원금 = () =>\r\n    Math.max(\r\n      this.state.total_price +\r\n        this.부가가치세_과세() +\r\n        this.개별소비세_과세() -\r\n        this.개별소비세_감면() +\r\n        this.교육세_과세() -\r\n        this.교육세_감면(),\r\n      0\r\n    );\r\n  최종가격 = () =>\r\n    Math.max(\r\n      this.state.total_price +\r\n        this.부가가치세_과세() +\r\n        this.개별소비세_과세() -\r\n        this.개별소비세_감면() +\r\n        this.교육세_과세() -\r\n        this.교육세_감면() -\r\n        this.전기차_보조금(),\r\n      0\r\n    );\r\n  원리금균등상환_월납입금 = (대출원금, 연이자율, 할부개월) => {\r\n    let 월이자율 = (연이자율 / 12) * 0.01;\r\n    let x = Math.pow(1 + 월이자율, 할부개월);\r\n    return (대출원금 * 월이자율 * x) / (x - 1);\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/model_3.yaml\"\r\n      )\r\n      .then(res => {\r\n        let data = YAML.parse(res.data);\r\n        this.setState({\r\n          trims: data.trims,\r\n          options: data.options,\r\n          base_price: this.usdTokrw(data.trims[0][\"가격\"]),\r\n          base_selected: 0,\r\n          loadingA: false\r\n        });\r\n        data.trims.forEach((v, i) => {\r\n          if (v[\"이름\"] === \"Performance\") {\r\n            this.setState({ performance_index: i });\r\n          }\r\n        });\r\n        this.calcTotalPrice();\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/saletex.yaml\"\r\n      )\r\n      .then(res => {\r\n        let data = YAML.parse(res.data);\r\n        this.setState({\r\n          saletex: {\r\n            개별소비세: {\r\n              과세: data[\"개별소비세\"][\"과세\"],\r\n              감면: data[\"개별소비세\"][\"감면\"]\r\n            },\r\n            교육세: {\r\n              과세: data[\"교육세\"][\"과세\"],\r\n              감면: data[\"교육세\"][\"감면\"]\r\n            },\r\n            취득세: {\r\n              과세: data[\"취득세\"][\"과세\"],\r\n              감면: data[\"취득세\"][\"감면\"]\r\n            }\r\n          },\r\n          loadingB: false\r\n        });\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        \"https://raw.githubusercontent.com/geeksbaek/tesla-model-3-korea/master/data/subsidy.json\"\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          gov_subsidy: res.data.gov,\r\n          subsidy_list: res.data.local\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Segment\r\n        textAlign=\"left\"\r\n        className=\"SegmentGroup\"\r\n        loading={this.state.loadingA && this.state.loadingB}\r\n      >\r\n        <Message info>\r\n          <Message.List>\r\n            <Message.Header>먼저 읽어주세요</Message.Header>\r\n            <Divider hidden fitted />\r\n            <Divider hidden fitted />\r\n            <Divider hidden fitted />\r\n            <Divider hidden fitted />\r\n            <Message.Item>\r\n              여기에서 표기되는 모든 가격은 USD를 현재 시간 기준의 환율을\r\n              적용하여 KRW으로 나타낸 것입니다.\r\n            </Message.Item>\r\n            <Message.Item>\r\n              구입에 필요한 최소한의 옵션이 미리 선택되어 있습니다.\r\n            </Message.Item>\r\n            <Message.Item>\r\n              거주지를 선택하면 해당 지자체에서 지급하는 승용 전기차 보조금과\r\n              정부에서 지급하는 전기차 보조금이 최종 가격에 반영됩니다.\r\n            </Message.Item>\r\n            <Message.Item>\r\n              계산된 가격과 실제 가격은 차이가 발생할 수 있으며 이로 인해\r\n              발생하는 문제에 대한 책임은 사용자에게 있습니다.\r\n            </Message.Item>\r\n          </Message.List>\r\n        </Message>\r\n\r\n        <Table compact=\"very\" celled selectable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>모델명</Table.HeaderCell>\r\n              <Table.HeaderCell>가격</Table.HeaderCell>\r\n              <Table.HeaderCell>주행거리</Table.HeaderCell>\r\n              <Table.HeaderCell>0-60mph</Table.HeaderCell>\r\n              <Table.HeaderCell>구동방식</Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {this.state.trims.map((v, i) => (\r\n              <Table.Row key={i} active={this.state.base_selected === i}>\r\n                <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                <Table.Cell>\r\n                  {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                </Table.Cell>\r\n                <Table.Cell>{v[\"주행거리(km)\"] + \" km\"}</Table.Cell>\r\n                <Table.Cell>{v[\"0-60\"] + \" 초\"}</Table.Cell>\r\n                <Table.Cell>{v[\"구동방식\"]}</Table.Cell>\r\n                <Table.Cell collapsing>\r\n                  <Checkbox\r\n                    radio\r\n                    checked={this.state.base_selected === i}\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        base_price: this.usdTokrw(v[\"가격\"]),\r\n                        base_selected: i\r\n                      });\r\n                      if (v[\"이름\"] === \"Performance\") {\r\n                        this.setState({\r\n                          wheal_price: 0,\r\n                          wheal_selected: 2\r\n                        });\r\n                      } else {\r\n                        this.setState({\r\n                          wheal_price: 0,\r\n                          wheal_selected: 0\r\n                        });\r\n                      }\r\n                    }}\r\n                    onChange={this.calcTotalPrice}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n        <Segment basic>\r\n          <Grid columns={2} relaxed=\"very\">\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>색상</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"color\"].map((v, i) => (\r\n                        <Table.Row\r\n                          key={i}\r\n                          active={this.state.color_selected === i}\r\n                        >\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              radio\r\n                              checked={this.state.color_selected === i}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  color_price: this.usdTokrw(v[\"가격\"]),\r\n                                  color_selected: i\r\n                                });\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>휠</Table.HeaderCell>\r\n                        <Table.HeaderCell>사이즈</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"wheal\"].map((v, i) => (\r\n                        <Table.Row\r\n                          key={i}\r\n                          active={this.state.wheal_selected === i}\r\n                          hidden={\r\n                            (this.state.base_selected !==\r\n                              this.state.performance_index &&\r\n                              v[\"_only\"] === \"Performance\") ||\r\n                            (this.state.base_selected ===\r\n                              this.state.performance_index &&\r\n                              v[\"_only\"] === \"!Performance\")\r\n                          }\r\n                        >\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>{v[\"사이즈\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              radio\r\n                              checked={this.state.wheal_selected === i}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  wheal_price: this.usdTokrw(v[\"가격\"]),\r\n                                  wheal_selected: i\r\n                                });\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>인테리어</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"interior\"].map((v, i) => (\r\n                        <Table.Row\r\n                          key={i}\r\n                          active={this.state.interior_selected === i}\r\n                        >\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              radio\r\n                              checked={this.state.interior_selected === i}\r\n                              onClick={() => {\r\n                                this.setState({\r\n                                  interior_price: this.usdTokrw(v[\"가격\"]),\r\n                                  interior_selected: i\r\n                                });\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Table compact=\"very\" celled selectable>\r\n                    <Table.Header>\r\n                      <Table.Row>\r\n                        <Table.HeaderCell>오토파일럿</Table.HeaderCell>\r\n                        <Table.HeaderCell>가격</Table.HeaderCell>\r\n                        <Table.HeaderCell />\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                      {this.state.options[\"autopilot\"].map((v, i) => (\r\n                        <Table.Row key={i}>\r\n                          <Table.Cell>{v[\"이름\"]}</Table.Cell>\r\n                          <Table.Cell>\r\n                            {this.comma(this.usdTokrw(v[\"가격\"])) + \" 원\"}\r\n                          </Table.Cell>\r\n                          <Table.Cell collapsing>\r\n                            <Checkbox\r\n                              onClick={(e, value) => {\r\n                                if (value.checked) {\r\n                                  this.setState({\r\n                                    autopilot_price: this.usdTokrw(v[\"가격\"])\r\n                                  });\r\n                                } else {\r\n                                  this.setState({\r\n                                    autopilot_price: 0\r\n                                  });\r\n                                }\r\n                              }}\r\n                              onChange={this.calcTotalPrice}\r\n                            />\r\n                          </Table.Cell>\r\n                        </Table.Row>\r\n                      ))}\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Form.Group>\r\n                <Divider hidden />\r\n                <Form.Group>\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <Header sub>전기차 보조금</Header>\r\n                    <Dropdown\r\n                      fluid\r\n                      deburr\r\n                      options={this.state.subsidy_list.map((v, i) => {\r\n                        return {\r\n                          key: i,\r\n                          value: i,\r\n                          text: `${v.name} (${this.comma(v.subsidy)}원)`\r\n                        };\r\n                      })}\r\n                      placeholder=\"보조금 계산을 위해 거주지를 선택하세요\"\r\n                      selection\r\n                      search\r\n                      onChange={(e, { value }) => {\r\n                        this.setState({\r\n                          local_subsidy: this.state.subsidy_list[value].subsidy\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </Form.Group>\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Tab\r\n                menu={{ secondary: true, pointing: true }}\r\n                panes={[\r\n                  {\r\n                    menuItem: \"현금\",\r\n                    render: () => (\r\n                      <Card fluid>\r\n                        <Card.Content>\r\n                          <Card.Header textAlign=\"center\">\r\n                            예상 현금 가격\r\n                          </Card.Header>\r\n                        </Card.Content>\r\n                        <Card.Content>\r\n                          <List>\r\n                            <List.Item>\r\n                              <List.Icon name=\"car\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"grey\" }}>\r\n                                  {this.comma(this.state.total_price) + \" 원\"}\r\n                                </List.Header>\r\n                                <List.Description>\r\n                                  차량 공장도 가격\r\n                                </List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <Divider />\r\n                            <List.Item>\r\n                              <List.Icon name=\"plus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"orange\" }}>\r\n                                  {this.comma(this.부가가치세_과세()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>\r\n                                      부가가치세\r\n                                    </List.Description>\r\n                                  }\r\n                                  content=\"취득 당시 가액의 10%\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"plus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"orange\" }}>\r\n                                  {this.comma(this.개별소비세_과세()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>\r\n                                      개별소비세\r\n                                    </List.Description>\r\n                                  }\r\n                                  content=\"공장도 가격의 5%\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"minus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"green\" }}>\r\n                                  {this.comma(this.개별소비세_감면()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>\r\n                                      개별소비세 감면\r\n                                    </List.Description>\r\n                                  }\r\n                                  content=\"최대 300만원 감면\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"plus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"orange\" }}>\r\n                                  {this.comma(this.교육세_과세()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>교육세</List.Description>\r\n                                  }\r\n                                  content=\"개별소비세의 30%\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"minus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"green\" }}>\r\n                                  {this.comma(this.교육세_감면()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>\r\n                                      교육세 감면\r\n                                    </List.Description>\r\n                                  }\r\n                                  content=\"최대 90만원 감면\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"plus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"orange\" }}>\r\n                                  {this.comma(this.취득세_과세()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>취득세</List.Description>\r\n                                  }\r\n                                  content=\"(공장도 가격 + 개별소비세 + 교육세)의 7%\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"minus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"green\" }}>\r\n                                  {this.comma(this.취득세_감면()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>\r\n                                      취득세 감면\r\n                                    </List.Description>\r\n                                  }\r\n                                  content=\"최대 140만원 감면\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <Divider />\r\n                            <List.Item>\r\n                              <List.Icon name=\"minus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"green\" }}>\r\n                                  {this.comma(this.state.gov_subsidy) + \" 원\"}\r\n                                </List.Header>\r\n                                <List.Description>정부 보조금</List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"minus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"green\" }}>\r\n                                  {this.comma(this.state.local_subsidy) + \" 원\"}\r\n                                </List.Header>\r\n                                <List.Description>\r\n                                  지방자치단체 보조금\r\n                                </List.Description>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <Divider />\r\n                            <List.Item>\r\n                              <List.Icon name=\"plus\" />\r\n                              <List.Content>\r\n                                <List.Header style={{ color: \"orange\" }}>\r\n                                  {this.comma(\r\n                                    this.취득세_과세() - this.취득세_감면()\r\n                                  ) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>취득세</List.Description>\r\n                                  }\r\n                                  content=\"감면 후 금액\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                            <List.Item>\r\n                              <List.Icon name=\"calculator\" />\r\n                              <List.Content>\r\n                                <List.Header>\r\n                                  {this.comma(this.최종가격()) + \" 원\"}\r\n                                </List.Header>\r\n                                <Popup\r\n                                  trigger={\r\n                                    <List.Description>\r\n                                      최종 가격\r\n                                    </List.Description>\r\n                                  }\r\n                                  content=\"취득세 별도\"\r\n                                  size=\"small\"\r\n                                />\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          </List>\r\n                        </Card.Content>\r\n                        <Card.Content extra textAlign=\"right\">\r\n                          <Button\r\n                            primary\r\n                            as=\"a\"\r\n                            href=\"https://www.tesla.com/ko_KR/model3/reserve\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            사전 예약\r\n                          </Button>\r\n                        </Card.Content>\r\n                      </Card>\r\n                    )\r\n                  },\r\n                  {\r\n                    menuItem: \"할부\",\r\n                    render: () => (\r\n                      <div>\r\n                        <Form>\r\n                          <Form.Group widths=\"equal\">\r\n                            <Form.Field\r\n                              readOnly\r\n                              control={Input}\r\n                              label=\"선납금1 (보조금)\"\r\n                              placeholder=\"선납금1\"\r\n                              value={this.comma(this.전기차_보조금())}\r\n                            />\r\n                            <Form.Field\r\n                              control={Input}\r\n                              label=\"선납금2 (그 외)\"\r\n                              placeholder=\"선납금2\"\r\n                              value={this.comma(this.state.prepay || \"\")}\r\n                              onChange={(e, { value }) => {\r\n                                if (value.match(/[^\\d,]/g)) {\r\n                                  return;\r\n                                }\r\n                                this.setState({\r\n                                  prepay: Number(value.replace(/[,.]/g, \"\"))\r\n                                });\r\n                              }}\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group widths=\"equal\">\r\n                            <Form.Field\r\n                              type=\"number\"\r\n                              control={Input}\r\n                              label=\"할부 연이율 (%)\"\r\n                              error={this.state.annual_loan_interest_rate === 0}\r\n                              value={this.state.annual_loan_interest_rate || \"\"}\r\n                              onChange={(e, { value }) => {\r\n                                this.setState({\r\n                                  annual_loan_interest_rate: Number(value)\r\n                                });\r\n                              }}\r\n                            />\r\n                            <Form.Field\r\n                              type=\"number\"\r\n                              control={Input}\r\n                              label=\"할부 개월 수\"\r\n                              error={this.state.installment_months === 0}\r\n                              value={this.state.installment_months || \"\"}\r\n                              onChange={(e, { value }) => {\r\n                                this.setState({\r\n                                  installment_months: Number(value)\r\n                                });\r\n                              }}\r\n                            />\r\n                          </Form.Group>\r\n                        </Form>\r\n                        <Card fluid>\r\n                          <Card.Content>\r\n                            <Card.Header textAlign=\"center\">\r\n                              예상 할부 결제액\r\n                            </Card.Header>\r\n                          </Card.Content>\r\n                          <Card.Content>\r\n                            <List>\r\n                              <List.Item>\r\n                                <List.Icon name=\"car\" />\r\n                                <List.Content>\r\n                                  <List.Header style={{ color: \"grey\" }}>\r\n                                    {this.comma(this.할부원금()) + \" 원\"}\r\n                                  </List.Header>\r\n                                  <Popup\r\n                                    trigger={\r\n                                      <List.Description>\r\n                                        할부원금\r\n                                      </List.Description>\r\n                                    }\r\n                                    content=\"공장도 가격 + 부가가치세 + 개별소비세 + 교육세\"\r\n                                    size=\"small\"\r\n                                  />\r\n                                </List.Content>\r\n                              </List.Item>\r\n                              <Divider />\r\n                              <List.Item>\r\n                                <List.Icon name=\"minus\" />\r\n                                <List.Content>\r\n                                  <List.Header style={{ color: \"green\" }}>\r\n                                    {this.comma(this.전기차_보조금()) + \" 원\"}\r\n                                  </List.Header>\r\n                                  <Popup\r\n                                    trigger={\r\n                                      <List.Description>\r\n                                        선납금1\r\n                                      </List.Description>\r\n                                    }\r\n                                    content=\"정부 보조금 + 지방자치단체 보조금\"\r\n                                    size=\"small\"\r\n                                  />\r\n                                </List.Content>\r\n                              </List.Item>\r\n                              <List.Item>\r\n                                <List.Icon name=\"minus\" />\r\n                                <List.Content>\r\n                                  <List.Header style={{ color: \"green\" }}>\r\n                                    {this.comma(this.state.prepay) + \" 원\"}\r\n                                  </List.Header>\r\n                                  <List.Description>선납금2</List.Description>\r\n                                </List.Content>\r\n                              </List.Item>\r\n                              <Divider />\r\n                              <List.Item>\r\n                                <List.Icon name=\"won sign\" />\r\n                                <List.Content>\r\n                                  <List.Header>\r\n                                    {this.comma(\r\n                                      this.할부원금() -\r\n                                        this.전기차_보조금() -\r\n                                        this.state.prepay\r\n                                    ) + \" 원\"}\r\n                                  </List.Header>\r\n                                  <Popup\r\n                                    trigger={\r\n                                      <List.Description>\r\n                                        대출원금\r\n                                      </List.Description>\r\n                                    }\r\n                                    content=\"할부원금 - 선납금\"\r\n                                    size=\"small\"\r\n                                  />\r\n                                </List.Content>\r\n                              </List.Item>\r\n                              <Divider />\r\n                              <List.Item>\r\n                                <List.Icon name=\"plus\" />\r\n                                <List.Content>\r\n                                  <List.Header style={{ color: \"orange\" }}>\r\n                                    {this.comma(\r\n                                      this.취득세_과세() - this.취득세_감면()\r\n                                    ) + \" 원\"}\r\n                                  </List.Header>\r\n                                  <Popup\r\n                                    trigger={\r\n                                      <List.Description>\r\n                                        취득세\r\n                                      </List.Description>\r\n                                    }\r\n                                    content=\"감면 후 금액\"\r\n                                    size=\"small\"\r\n                                  />\r\n                                </List.Content>\r\n                              </List.Item>\r\n                              <List.Item>\r\n                                <List.Icon name=\"calculator\" />\r\n                                <List.Content>\r\n                                  <List.Header>\r\n                                    {this.comma(\r\n                                      this.원리금균등상환_월납입금(\r\n                                        this.할부원금() -\r\n                                          this.전기차_보조금() -\r\n                                          this.state.prepay,\r\n                                        this.state.annual_loan_interest_rate,\r\n                                        this.state.installment_months\r\n                                      )\r\n                                    ) + \" 원\"}\r\n                                  </List.Header>\r\n                                  <Popup\r\n                                    trigger={\r\n                                      <List.Description>\r\n                                        월상환금\r\n                                      </List.Description>\r\n                                    }\r\n                                    content=\"원리금 균등상환방식 (취득세 별도)\"\r\n                                    size=\"small\"\r\n                                  />\r\n                                </List.Content>\r\n                              </List.Item>\r\n                            </List>\r\n                          </Card.Content>\r\n                          <Card.Content extra textAlign=\"right\">\r\n                            <Button\r\n                              primary\r\n                              as=\"a\"\r\n                              href=\"https://www.tesla.com/ko_KR/model3/reserve\"\r\n                              target=\"_blank\"\r\n                            >\r\n                              사전 예약\r\n                            </Button>\r\n                          </Card.Content>\r\n                        </Card>\r\n                      </div>\r\n                    )\r\n                  }\r\n                ]}\r\n              />\r\n            </Grid.Column>\r\n          </Grid>\r\n          <Divider vertical>Calc</Divider>\r\n        </Segment>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Grid, Segment, Tab, Image } from \"semantic-ui-react\";\r\nimport \"./index.css\";\r\nimport Logo from \"./assets/img/compare-model3--center.png\";\r\nimport Price from \"./Price\";\r\n\r\nconst panes = [\r\n  {\r\n    menuItem: { key: \"price\", icon: \"calculator\", content: \"가격 계산\" },\r\n    render: () => <Price />\r\n  }\r\n];\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"container\">\r\n        <Grid centered verticalAlign=\"middle\">\r\n          {/* <Grid.Row>\r\n            <Segment basic>\r\n              <Image src={Logo} size=\"big\" centered />\r\n            </Segment>\r\n          </Grid.Row> */}\r\n          <Grid.Row verticalAlign=\"middle\">\r\n            <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}